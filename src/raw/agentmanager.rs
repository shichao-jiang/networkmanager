//! # DBus interface proxy for: `org.freedesktop.NetworkManager.AgentManager`
//!
//! This code was generated by `zbus-xmlgen` `3.1.1` from DBus introspection data.
//! Source: `org.freedesktop.NetworkManager.AgentManager.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus_macros::proxy;

#[proxy(
    interface = "org.freedesktop.NetworkManager.AgentManager",
    assume_defaults = true
)]
pub trait AgentManager {
    /// Register method
    fn register(&self, identifier: &str) -> zbus::Result<()>;

    /// RegisterWithCapabilities method
    fn register_with_capabilities(&self, identifier: &str, capabilities: u32) -> zbus::Result<()>;

    /// Unregister method
    fn unregister(&self) -> zbus::Result<()>;
}
