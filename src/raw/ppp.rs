//! # DBus interface proxy for: `org.freedesktop.NetworkManager.PPP`
//!
//! This code was generated by `zbus-xmlgen` `3.1.1` from DBus introspection data.
//! Source: `org.freedesktop.NetworkManager.PPP.xml`.
//!
//! You may prefer to adapt it, instead of using it verbatim.
//!
//! More information can be found in the
//! [Writing a client proxy](https://dbus.pages.freedesktop.org/zbus/client.html)
//! section of the zbus documentation.
//!

use zbus_macros::proxy;

#[proxy(
    interface = "org.freedesktop.NetworkManager.PPP",
    assume_defaults = true
)]
pub trait PPP {
    /// NeedSecrets method
    fn need_secrets(&self) -> zbus::Result<(String, String)>;

    /// SetIfindex method
    fn set_ifindex(&self, ifindex: i32) -> zbus::Result<()>;

    /// SetIp4Config method
    fn set_ip4_config(
        &self,
        config: std::collections::HashMap<&str, zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<()>;

    /// SetIp6Config method
    fn set_ip6_config(
        &self,
        config: std::collections::HashMap<&str, zbus::zvariant::Value<'_>>,
    ) -> zbus::Result<()>;

    /// SetState method
    fn set_state(&self, state: u32) -> zbus::Result<()>;
}
